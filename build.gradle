import org.ajoberstar.grgit.Grgit

plugins {
    id "org.jetbrains.intellij" version "1.3.0"
    id "org.ajoberstar.grgit" version "4.1.1"
    id "java"
    id "idea"
}

group 'net.ishchenko.idea.nginx'
version '0.1.11'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenLocal()
    mavenCentral()

}

dependencies {
//    implementation 'com.jgoodies:forms:1.2.1'
    implementation 'com.jgoodies:jgoodies-common:1.8.1'
    implementation 'com.jgoodies:jgoodies-forms:1.9.0'
//    implementation 'com.jgoodies:jgoodiesforms:1.5.1'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
}

sourceSets {
    main {
        java.srcDirs 'src', 'gen'
        resources.srcDir 'resources'
    }
    test {
        java.srcDir 'tests'
    }
}

intellij {
    version = '2021.3' //IntelliJ IDEA dependency
    type = 'IU'
    updateSinceUntilBuild = false
    pluginName = 'idea-nginx-support'
//    localPath = 'D:\\Program\\JetBrains\\ideaIU-2021.3.win'
//    localPath = 'D:\\Program\\JetBrains\\WebStorm-2021.2.3.win'

//    publishPlugin {
//        username project.hasProperty('user') ? user : ''
//        password project.hasProperty('pass') ? pass : ''
//    }
}

task generateDocumentation(type: JavaExec) {
    main = 'net.ishchenko.idea.nginx.KeywordsFromSourcesGenerator'
    classpath = sourceSets.main.runtimeClasspath
}

task getRepos() {
    doLast {
        def path = 'vendor/nginx'
        if (!file(path).exists()) {
            Grgit.clone(dir: file(path), uri: 'https://github.com/nginx/nginx.git')
        } else {
            Grgit.open(dir: file(path)).pull()
        }
        def luaPath = 'vendor/lua-nginx-module'
        if (!file(luaPath).exists()) {
            Grgit.clone(dir: file(luaPath), uri: 'https://github.com/openresty/lua-nginx-module.git')
        } else {
            Grgit.open(dir: file(luaPath)).pull()
        }
    }
}
